name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'LICENSE'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Auth Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service:latest ./services/auth
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:latest

      - name: Build and Push Course Management Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/course-service:latest ./services/course-management
          docker push ${{ secrets.DOCKER_USERNAME }}/course-service:latest

      - name: Build and Push Forum Service Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/forum-service:latest ./services/forum-service
          docker push ${{ secrets.DOCKER_USERNAME }}/forum-service:latest

      - name: Build and Push Gateway Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gateway-service:latest ./services/gateway
          docker push ${{ secrets.DOCKER_USERNAME }}/gateway-service:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-south-1 # or your region

      - name: Update K8s manifests and apply
        run: |
          # Replace Docker username in Kubernetes YAML files
          find k8s -name "*.yaml" -type f -exec sed -i "s|hansajith18/|${{ secrets.DOCKER_USERNAME }}/|g" {} \;
          aws eks update-kubeconfig --region ap-south-1 --name microservice-cluster
          kubectl apply -f k8s/

      - name: Restart deployments
        run: |
          kubectl rollout restart deployment auth
          kubectl rollout restart deployment course
          kubectl rollout restart deployment forum
          kubectl rollout restart deployment gateway
